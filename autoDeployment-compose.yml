version: "3"  
services: 
  jenkins:  
    container_name: dev-jenkins
    image: jenkins/jenkins:lts 
    restart: always
    privileged: true
    volumes:  
      - /var/jenkins_home/:/var/jenkins_home
      - /usr/local/jdk1.8.0_45/:/usr/local/jdk
      - /usr/local/sonar-scanner-3.1.0.1141:/usr/local/sonar-scanner-3.1.0.1141     
      - /usr/local/apache-maven-3.5.0:/usr/local/apache-maven-3.5.0
      - /var/run/docker.sock:/var/run/docker.sock 
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
      -  ~/.ssh:/root/.ssh
    restart: always
    environment:
      TZ: ${GLOBAL_TIME_ZONE}
      JAVA_OPTS: "-Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Shanghai"
    ports:  
      - "80:8080"
      
  sonarqube:
    image: sonarqube:7.9.1-community
    container_name: dev-sonarqube
    ports:
      - "8080:9000"
      - "9092:9092"
    networks:
      - sonarnet
    environment:
    restart: always
      - SONARQUBE_HOME=/opt/sonarqube
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    volumes:
      - /app/sonarqube/conf:/opt/sonarqube/conf
      - /app/sonarqube/data:/opt/sonarqube/data
      - /app/sonarqube/logs:/opt/sonarqube/logs
      - /app/sonarqube/extensions:/opt/sonarqube/extensions
 
  db:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - /app/sonarqube/postgres:/var/lib/postgresql/data
 
networks:
  sonarnet:
    driver: bridge
