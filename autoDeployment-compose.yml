version: "3"  
services: 
  jenkins:  
    container_name: dev-jenkins
    image: jenkins/jenkins:lts 
    restart: always
    privileged: true
    volumes:  
      - /var/jenkins_home/:/var/jenkins_home
      - /usr/local/jdk1.8.0_45/:/usr/local/jdk
      - /usr/local/sonar-scanner-3.1.0.1141:/usr/local/sonar-scanner-3.1.0.1141     
      - /usr/local/apache-maven-3.5.0:/usr/local/apache-maven-3.5.0
      - /var/run/docker.sock:/var/run/docker.sock 
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
      -  ~/.ssh:/root/.ssh
    restart: always
    environment:
      TZ: ${GLOBAL_TIME_ZONE}
      JAVA_OPTS: "-Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Shanghai"
    ports:  
      - "80:8080"

  sonarqube:
    container_name: dev_sonarqube
    image: sonarqube
    ports:
     - "8080:9000"
    links:
     - db
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONARQUBE_JDBC_USERNAME: ${SONARQUBE_JDBC_USERNAME}
      SONARQUBE_JDBC_PASSWORD: ${SONARQUBE_JDBC_PASSWORD} 
#      SONARQUBE_JDBC_URL: ${SONARQUBE_JDBC_URL}
    volumes_from:
     - plugins

  db:
    container_name: postgres
    image: postgres
    volumes_from:
      - datadb
    environment:
     - POSTGRES_USER=${SONARQUBE_JDBC_USERNAME}
     - POSTGRES_PASSWORD=${SONARQUBE_JDBC_PASSWORD} 

  datadb:
    image: postgres
    container_name: plugins_postgres
    volumes:
      - /var/lib/postgresql
    command: /bin/true

  plugins:
    container_name: plugins_sonarqube
    image: sonarqube
    restart: always
    volumes:  
     - ./sonarqube/conf:/opt/sonarqube/conf
     - ./sonarqube/data:/opt/sonarqube/data
     - ./sonarqube/extensions:/opt/sonarqube/extensions
     - ./sonarqube/bundled-plugins:/opt/sonarqube/lib/bundled-plugins

    command: /bin/true
